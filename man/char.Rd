% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/char.R
\name{char}
\alias{char}
\alias{set_char_opts}
\title{Format a character vector in a tibble}
\usage{
char(
  x,
  ...,
  min_width = NULL,
  shorten = c("back", "front", "mid", "never", "abbreviate")
)

set_char_opts(
  x,
  ...,
  min_width = NULL,
  shorten = c("back", "front", "mid", "never", "abbreviate")
)
}
\arguments{
\item{...}{These dots are for future extensions and must be empty.}
}
\description{
Constructs a character vector that can be formatted with predefined minimum width
or without width restrictions, and where the abbreviation style can be configured.

The formatting is applied when the vector is printed or formatted,
and also in a tibble column.

\code{set_char_opts()} adds formatting options to an arbitrary character vector,
useful for composing with other types.
}
\examples{
# Display as a vector
char(letters[1:3])
\dontshow{if ({ set.seed(20210331); requireNamespace("stringi", quietly = TRUE) }) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

rand_strings <- pillar(stringi::stri_rand_strings(10, 31:40))

# Plain character vectors get truncated if space is limited:
data_with_id <- function(id) {
  tibble::tibble(
    id,
    some_number_1 = 1, some_number_2 = 2, some_number_3 = 3,
    some_number_4 = 4, some_number_5 = 5, some_number_6 = 6,
    some_number_7 = 7, some_number_8 = 8, some_number_9 = 9
  )
}
data_with_id(rand_strings)

# Use char() to avoid or control truncation
data_with_id(char(rand_strings, min_width = 35))
data_with_id(char(rand_strings, shorten = "none"))
data_with_id(char(rand_strings, min_width = 35, shorten = "mid"))

lipsum <- stringi::stri_rand_lipsum(3)
data_with_id(char(lipsum, shorten = "abbreviate"))
\dontshow{\}) # examplesIf}
}
