% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/numbers.R
\name{num}
\alias{num}
\alias{set_num_opts}
\title{Format a number in a tibble}
\usage{
num(
  x,
  ...,
  sigfig = NULL,
  digits = NULL,
  label = NULL,
  scale = NULL,
  notation = NULL,
  fixed_magnitude = NULL
)

set_num_opts(
  x,
  ...,
  sigfig = NULL,
  digits = NULL,
  label = NULL,
  scale = NULL,
  notation = c("dec", "sci", "eng", "si"),
  fixed_magnitude = NULL
)
}
\description{
Constructs a vector with custom that can be formatted with predefined
significant digits, or with a maximum or fixed number of digits
after the decimal point.
Scaling is supported, as well as forcing a decimal, scientific
or engineering notation.
If a label is given, it is shown in the header of a column.

The formatting is applied when the vector is printed or formatted,
and also in a tibble column.
The formatting annotation and the class survives most arithmetic transformations,
the most notable exceptions are \code{\link[=var]{var()}} and \code{\link[=sd]{sd()}}.
FIXME: \code{num_()} modifier.

\code{set_num_opts()} adds formatting options to an arbitrary numeric vector,
useful for composing with other types.
}
\examples{
# Display as a vector
num(9:11 * 100 + 0.5)

\dontshow{if (requireNamespace("tibble", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Significant figures
tibble::tibble(
  x3 = num(9:11 * 100 + 0.5, sigfig = 3),
  x4 = num(9:11 * 100 + 0.5, sigfig = 4),
  x5 = num(9:11 * 100 + 0.5, sigfig = 5),
)

# Maximum digits after the decimal points
tibble::tibble(
  x0 = num(9:11 * 100 + 0.5, digits =  0),
  x1 = num(9:11 * 100 + 0.5, digits = -1),
  x2 = num(9:11 * 100 + 0.5, digits = -2),
)

# Use fixed digits and a currency label
tibble::tibble(
  usd = num(9:11 * 100 + 0.5, digits = 2, label = "USD"),
  gbp = num(9:11 * 100 + 0.5, digits = 2, label = "Â£"),
  chf = num(9:11 * 100 + 0.5, digits = 2, label = "SFr")
)

# Scale
tibble::tibble(
  small  = num(9:11 / 1000 + 0.00005, label = "\%", scale = 100),
  medium = num(9:11 /  100 + 0.0005 , label = "\%", scale = 100),
  large  = num(9:11 /   10 + 0.005  , label = "\%", scale = 100)
)

# Notation
tibble::tibble(
  sci = num(10^(-13:6), notation = "sci"),
  eng = num(10^(-13:6), notation = "eng"),
  eng = num(10^(-13:6), notation = "si"),
  dec = num(10^(-13:6), notation = "dec")
)

# Fixed exponent notation
tibble::tibble(
  scifix = num(10^(-7:6) * 123, notation = "sci", fixed_magnitude = TRUE),
  engfix = num(10^(-7:6) * 123, notation = "eng", fixed_magnitude = TRUE),
  sifix  = num(10^(-7:6) * 123, notation = "si",  fixed_magnitude = TRUE)
)
\dontshow{\}) # examplesIf}
}
